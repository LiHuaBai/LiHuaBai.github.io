{"meta":{"title":"Vince's Blog","subtitle":"You see the world, the world see you","description":null,"author":"毛靖文","url":"http://yoursite.com","root":"/"},"pages":[{"title":"","date":"2019-03-20T06:49:01.000Z","updated":"2019-03-21T08:01:37.320Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2019-03-20T06:48:44.000Z","updated":"2019-03-21T08:01:41.654Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"基于LSTM的问答匹配实践","slug":"LSTM_QA_match","date":"2019-03-21T12:39:24.657Z","updated":"2019-03-21T13:19:24.123Z","comments":true,"path":"2019/03/21/LSTM_QA_match/","link":"","permalink":"http://yoursite.com/2019/03/21/LSTM_QA_match/","excerpt":"","text":"之前的博客里，都写了一些tensorflow的入门学习，当时在学习tensorflow时一个让我很头疼的问题就是，只要自己写大点深点的网络，基本都是跑不动，损失函数降了一阵就不动了，估计可能是初始化，正则防止过拟合没做好。这个LSTM网络算是我难得写出来能跑的网络，现在有空了来记录一下。 LSTM网络LSTM网络是由RNN变化而来，当时一直很困惑的问题就是关于RNN，横的算一层还是竖的算一层，应该是横的算一层，因此最简单的RNN即是一层隐藏层，光看RNN模型图的话，总会有些误解，实际上RNN每个单元的输入对应的状态隐藏层是可以有多个输出的，因为一个单元的输入维度也是n维，对应隐藏层的输出若是m维，则但看这个单元可理解为n到m的全连接网络。这个隐藏层维度一般就是由自己设定。 同时关于RNN和LSTM的输出，一般在理解模型时，都是以一个句子为例，只需要最后一个序列单元对应的输出，实际上通过tensorflow和keras框架得到的输出，是包括所有单元的，如RNN的输出1outputs, last_state = tf.nn.static_rnn(cell, inputs) 理论上可认为outputs[-1]与last_state是相等的 关于LSTM，由于其状态由两个值构成(Ct,Ht)，认为其状态是一个tuple，其输出为1outputs, state_out = tf.contrib.rnn.static_rnn(cell, inputs, initial_state=tuple_state) 这样得到的state_out包含两个值，若所写的网络中间有多个隐藏层，则可以有更多状态输出。 同时对于双向LSTM，其输出outputs的每个单元尺寸为两个LSTM的隐藏层输出单元的和 LSTM网络代码123456789def biLSTMCell(x, hiddenSize): input_x = tf.transpose(x, [1, 0, 2])# 0 1 2 变成1 0 2，最外面两个维度转置 input_x = tf.unstack(input_x) #多维变成低维，默认axio = 0，最外层的维度 lstm_fw_cell = tf.contrib.rnn.BasicLSTMCell(hiddenSize, forget_bias=1.0, state_is_tuple=True) lstm_bw_cell = tf.contrib.rnn.BasicLSTMCell(hiddenSize, forget_bias=1.0, state_is_tuple=True) output, _, _ = tf.contrib.rnn.static_bidirectional_rnn(lstm_fw_cell, lstm_bw_cell, input_x, dtype=tf.float32) output = tf.stack(output) #一维变成多维 output = tf.transpose(output, [1, 0, 2]) return output 需要使用unstack与stack函数变化矩阵维度结构，unstack将一个整体tf变量变成了一个数字list内部的多个tf量，作为输入进入网络输出后，再使用stack函数变回整体tf变量。完整代码","categories":[{"name":"DeepLearning","slug":"DeepLearning","permalink":"http://yoursite.com/categories/DeepLearning/"},{"name":"tensorflow","slug":"DeepLearning/tensorflow","permalink":"http://yoursite.com/categories/DeepLearning/tensorflow/"}],"tags":[]},{"title":"重开博客采坑记录","slug":"Blog_Git_Experience","date":"2019-03-21T10:09:01.186Z","updated":"2019-03-21T10:54:03.850Z","comments":true,"path":"2019/03/21/Blog_Git_Experience/","link":"","permalink":"http://yoursite.com/2019/03/21/Blog_Git_Experience/","excerpt":"","text":"再次利用hexo搭建个人博客的过程中，依旧踩了很多坑，主要之前Git用的不熟练，现在顺便也补一下Git的配置和使用方法。 Git主机秘钥配置使用Git来进行分布式管理，首先要配置用户名，邮箱，以及主机秘钥12git config --global user.name \"yourname\"git config --global user.email \"youremail\" 邮箱与用户名与github一致1ssh-keygen -t rsa -C \"youremail\" 会让设置密码什么的，一般可以直接回车不设置，完成后在~.ssh/文件夹里，会有公钥id_rsa.pub和私钥id_rsa，公钥在github在github的账号settings的SSH keys处配置。 两个github账号引起的错误想着本来那个账号注册的比较随便，用户名有点怪怪的，于是打算换一个，结果换了一个配置好秘钥后居然不能push到仓库也不能用hexo deploy，原因是第一次用git提交到远程仓库时，需要输入github的账号密码，系统自动记住了，换账号后，需要主要删除之前账号的信息，在控制面板-&gt;用户账户-&gt;凭据管理器（管理windows凭据）处，删除git凭据 hexo博客搭建各类坑原先开启标签和分类后，切换主题后再切回来会出错，导致主题样式异常，需要重新开启标签和分类 所用主题开启标签和分类后，还需要去改标签和分类的index.md的内容，才能正确显示 评论系统，开启gitment原先是这样的123456gitment: false# gitment:# owner: LiHuaBai# repo: LiHuaBai.github.io# client_id:# client_secret: 正确开启写法123456# gitment: falsegitment: owner: LiHuaBai repo: LiHuaBai.github.io client_id:申请的id client_secret:申请的secret 在此处申请OAuthid其中的Homepage URL和Authorization callback URL可以都写成https://username.github.io申请后的OAuth Apps在这里查看 然而配置好依旧不能用，查找后发现是原开发者的服务器已经关闭了，找了一个别人搭好的服务器，在主题的layout文件夹里面找到gitment的部分，修改如下12&lt;link rel=\"stylesheet\" href=\"https://jjeejj.github.io/css/gitment.css\"&gt;&lt;script src=\"https://jjeejj.github.io/js/gitment.js\"&gt;&lt;/script&gt; 可正常使用评论功能","categories":[{"name":"采坑","slug":"采坑","permalink":"http://yoursite.com/categories/采坑/"},{"name":"Git","slug":"采坑/Git","permalink":"http://yoursite.com/categories/采坑/Git/"}],"tags":[]},{"title":"于是我又重开了这个坑","slug":"New_Start","date":"2019-03-20T05:37:16.578Z","updated":"2019-03-21T08:04:26.979Z","comments":true,"path":"2019/03/20/New_Start/","link":"","permalink":"http://yoursite.com/2019/03/20/New_Start/","excerpt":"","text":"时隔两年，考研结束后的我本想捡回之前的博客（虽然已经闲置一年），兴致满满的一通操作，然而发现1年前电脑重装过后当时的本地hexo文件并没有保存备份，github上只存着静态html，md文件也找不回来。不过想想在原来博客上也没写多少东西，于是乎，我又重开了一个坑。 起因两年前也只是一时脑子一热，觉得有个个人博客还挺帅的，作为一个CS专业的学生，自诩动手能力强，便直接上手搭建了之前的博客（然而都是靠学长的帮助，我似乎并没有干多少事情）。 本以为自己之后一定会做出很多厉害的项目，经常更新博客，实际上过了起初的劲头，也逐渐懒得打开博客，同时自己发现学的和写的东西也都只是网上到处都有的入门级代码，陷入了一种好像没有什么特别值得写的东西的这样莫名的心态。 再加上考研复习那一年也就基本没怎么也代码了，本来都已经忘了博客这回事了，但我似乎是看到了什么事便不能随便忘掉的那种人，再加上最近了解了以前同学的情况和学长们的博客，发现大家都好像还挺努力地过着自己的人生。 虽然自己想做的事情似乎有很多结果都不满意，但也正是因为做了许多事情，才能走到今天这步。于是我又很不要脸的重新拉了一个博客。 目标每次想到人生目标这类东西，我总觉得太过遥远，就感觉自己大一时候那个什么都不懂的大学新生状态还历历在目，只是因为害怕未知的世界就只好努力学习，假装自己目标很明确的样子。 感觉自己其实兴趣比较广，也有看起来还可以的规划，但却又习惯性去担心自己的目标是不是正确，每当达成了一点东西后，高兴了几天后，又继续担心之后的任务是不是正确，毕竟越走越远，花的时间精力也越来越多，只能硬着头皮继续前进了。 既然已经考上了ZJU的研究生，也总算有了一点学校的优势，接下来的就得让自己在这个更高的平台上有所成就，希望能在硕士阶段较好的融入ZJU的氛围（大佬遍地的感觉真令人感到不安），顺利的发一些paper，目前来说还是做之后找工作的打算的。 关于目前大学四年，我发现自己确实迫于生计把大多数时间都用在学业上了，以至于现在回想起来，个人兴趣爱好方面的东西在这几年几乎没有任何增长，课外阅读量甚至没有高中三年多。并且有了上一个博客的经验，技术内容确实可能没有那么多可写的，也希望自己趁这段时间多去尝试一些别的事情，多出去逛逛，可能的话也想学一下新的语言之类的，也该丰富一下自己的生活了。","categories":[{"name":"日志","slug":"日志","permalink":"http://yoursite.com/categories/日志/"}],"tags":[]}]}